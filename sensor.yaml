#sensor.yaml

#Date/time
  - platform: time_date
    display_options:
    - date
    - time

### SYSTEM ###  
# LAN ad-blocking
  - platform: pi_hole
    monitored_conditions:
     - ads_blocked_today 
     - ads_percentage_today
     - dns_queries_today
     - domains_being_blocked
     - queries_cached 
     - queries_forwarded 
     - unique_clients 
     - unique_domains

# Internets speedtest
  - platform: speedtest
# Test connection every six hours, on the hour
    minute: 0
    hour: 
      - 0
      - 6
      - 12
      - 18
    monitored_conditions:
      - ping
      - download
      - upload
### RPI ###
  - platform: systemmonitor
    resources:
      - type: disk_free
        arg: /
      - type: memory_free
      - type: processor_use
      - type: ipv4_address
        arg: enxb827eb54f44e
      - type: last_boot
      - type: since_last_boot
### REST ###
  - platform: rest
    resource: http://ip.jsontest.com
    name: external_ip
    value_template: '{{ value_json.ip }}'
    scan_interval: 86400
  - platform: rest
    resource: https://pypi.python.org/pypi/homeassistant/json
    name: HA Current Version
    value_template: '{{ value_json.info.version }}'
### COMMAND LINE ###
  - platform: command_line
    name: CPU Temperature
    command: cat /sys/class/thermal/thermal_zone0/temp
    unit_of_measurement: 'F'
    value_template: '{{ (value|int / 1000 * 1.8 + 32)|round(1) }}'
  - platform: command_line
    name: HA Installed Version
    command: /srv/homeassistant/bin/hass --version
    scan_interval: 86400

### MQTT ###
# Arduino based mqtt sensor data
  - platform: mqtt
    state_topic: "sensor/shed/humidity"
    name: "Shed Humidity"
    unit_of_measurement: "%"
    value_template: '{{ value | round(0) }}'
  - platform: mqtt
    state_topic: "sensor/shed/temperature"
    name: "Shed Temperature"
    value_template: '{{ value | round(0) }}'
    unit_of_measurement: "Â°F"
  - platform: mqtt
    state_topic: "sensor/shed/pressure"
    name: "Shed Pressure"
    unit_of_measurement: "in Hg"
    value_template: '{{ value | round(2) }}'
  - platform: mqtt
    state_topic: "sensor/shed/battery"
    name: "Shed battery"
    value_template: '{{ value | round(0) }}'
    unit_of_measurement: "%"
# owntracks battery levels
  - platform: mqtt
    state_topic: "owntracks/jf/note5"
    name: "JF Phone Battery "
    unit_of_measurement: "%"
    value_template: '{{ value_json.batt }}'
  - platform: mqtt
    state_topic: "owntracks/shmoopy/galaxy"
    name: "Shmoopy Phone Battery "
    unit_of_measurement: "%"
    value_template: '{{ value_json.batt }}'
### WEATHER ETC. ###### WEATHER ETC. ###
# Local weather report from openweathermap
  # - platform: openweathermap
    # api_key: !secret owm_key
  - platform: darksky
    api_key: !secret darksky_api_key
    monitored_conditions:
      - summary
      - icon
      - nearest_storm_distance
      - wind_speed
      - cloud_cover
      - hourly_summary
      - daily_summary
      - temperature
      - humidity
      - pressure
      - dew_point
      - wind_bearing
  - platform: moon
### OTHER ###
  - platform: crimereports
    name: local_crime
    radius: 100000
    latitude: !secret home_latitude
    longitude: !secret home_longitude
    include: 
     - Alarm
     - Arson
     - Assault
     - Assault with Deadly Weapon
     - Breaking & Entering
     - Death
     - Drugs
     - Fire
     - Homicide
     - Kidnapping
  - platform: xbox_live
    api_key: !secret xbox_api_key
    xuid:
     - !secret xbox_uid
  
  - platform: google_travel_time
    name: Shmoopy Morning Commute
    api_key: !secret google_key
    origin: zone.home
    destination: zone.shmoopy_work
  - platform: google_travel_time
    name: Shmoopy Evening Commute
    api_key: !secret google_key
    origin: zone.shmoopy_work
    destination: zone.home
  - platform: google_travel_time
    name: Shmoopy to Home
    api_key: !secret google_key
    origin: device_tracker.shmoopy_galaxy
    destination: zone.home
  - platform: google_travel_time
    name: JF Morning Commute
    api_key: !secret google_key
    origin: zone.home
    destination: zone.jf_work
  - platform: google_travel_time
    name: JF Evening Commute
    api_key: !secret google_key
    origin: zone.jf_work
    destination: zone.home
  - platform: google_travel_time
    name: JF to Home
    api_key: !secret google_key
    origin: device_tracker.jf_note5
    destination: zone.home
  # Today's Pollen Index
  - platform: rest
    name: 'Pollen Index'
    resource: !secret pollen_current_url
    value_template: "{{value_json.Location.periods[1].Index}}"
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Today's Pollen Level
  - platform: template
    sensors:
      pollen_level:
        friendly_name: 'Pollen Level'
        entity_id: sensor.pollen_index
        value_template: >-
          {%- if states.sensor.pollen_index.state|float <= 2.4 %}
              Low
          {%- elif states.sensor.pollen_index.state|float <= 4.8 %}
              Med/Low
          {%- elif states.sensor.pollen_index.state|float <= 7.2 %}
              Med
          {%- elif states.sensor.pollen_index.state|float <= 9.6 %}
              Med/High
          {%- elif states.sensor.pollen_index.state|float <= 12.0 %}
              High
          {% else %}
              Unknown
          {%- endif %}

  # Tomorrow's Pollen Index Forecast
  - platform: rest
    name: 'Pollen Index Forecast'
    resource: !secret pollen_current_url
    value_template: "{{value_json.Location.periods[2].Index}}"
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Tomorrow's Pollen Level Forecast
  - platform: template
    sensors:
      pollen_level_forecast:
        friendly_name: 'Pollen Level Forecast'
        entity_id: sensor.pollen_index
        value_template: >-
          {%- if states.sensor.pollen_index_forecast.state|float <= 2.4 %}
              Low
          {%- elif states.sensor.pollen_index_forecast.state|float <= 4.8 %}
              Med/Low
          {%- elif states.sensor.pollen_index_forecast.state|float <= 7.2 %}
              Med
          {%- elif states.sensor.pollen_index_forecast.state|float <= 9.6 %}
              Med/High
          {%- elif states.sensor.pollen_index_forecast.state|float <= 12.0 %}
              High
          {% else %}
              Unknown
          {%- endif %}

  # Today's Top Allergen
  - platform: rest
    name: 'Top Allergen 1'
    resource: !secret pollen_current_url
    value_template: >-
      {% if value_json.Location.periods[1].Triggers[0] %}
      {{ value_json.Location.periods[1].Triggers[0].PlantType }}
      {% else %}
      -
      {% endif %}
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Today's Second Allergen
  - platform: rest
    name: 'Top Allergen 2'
    resource: !secret pollen_current_url
    value_template: >-
      {% if value_json.Location.periods[1].Triggers[1] %}
      {{ value_json.Location.periods[1].Triggers[1].PlantType }}
      {% else %}
      -
      {% endif %}
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Today's Third Allergen
  - platform: rest
    name: 'Top Allergen 3'
    resource: !secret pollen_current_url
    value_template: >-
      {% if value_json.Location.periods[1].Triggers[2] %}
      {{ value_json.Location.periods[1].Triggers[2].PlantType }}
      {% else %}
      -
      {% endif %}
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Pollen Trend
  - platform: rest
    name: 'Pollen Trend'
    resource: !secret pollen_forecast_url
    value_template: "{{value_json.Trend}}"
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Pollen Outlook
  - platform: rest
    name: 'Pollen Outlook'
    resource: !secret pollen_forecast_url
    value_template: "{{value_json.Outlook}}"
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Pollen Season
  - platform: rest
    name: 'Pollen Season'
    resource: !secret pollen_forecast_url
    value_template: "{{value_json.Season}}"
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"

  # Today's Cold/Flu Percentage
  - platform: rest
    name: 'Cold & Flu Percentage'
    resource: !secret cold_url
    value_template: "{{value_json.Location.periods[1].Index}}"
    scan_interval: 21600
    headers:
      Referer: "https://www.pollen.com"
    unit_of_measurement: "%"
### TEMPLATES ###
  # Today's Cold/Flu Risk
  - platform: template
    sensors:
      cold_flu_risk:
        friendly_name: 'Cold & Flu Risk'
        entity_id: sensor.cold__flu_percentage
        value_template: >-
          {%- if states.sensor.cold__flu_percentage.state|float <= 2.4 %}
              Low
          {%- elif states.sensor.cold__flu_percentage.state|float <= 4.8 %}
              Med/Low
          {%- elif states.sensor.cold__flu_percentage.state|float <= 7.2 %}
              Med
          {%- elif states.sensor.cold__flu_percentage.state|float <= 9.6 %}
              Med/High
          {%- elif states.sensor.cold__flu_percentage.state|float <= 12.0 %}
              High
          {% else %}
              Unknown
          {%- endif %}
  - platform: template
    sensors:
      sunset:
        friendly_name: "Sunset"
        entity_id: sun.sun
        # unit_of_measurement: 'degrees'
        value_template: "{{ states.sun.sun.attributes.next_dusk }}"
      sunrise:
        friendly_name: "Sunrise"
        entity_id: sun.sun
        value_template: "{{ states.sun.sun.attributes.next_rising }}"
  - platform: template
    sensors:
      ds_pressure_pretty:
        friendly_name: "Pressure"
        unit_of_measurement: 'in Hg'
        value_template: "{{ '%.2f'|format(states('sensor.dark_sky_pressure')|float * 0.02953) }}"
  - platform: template
    sensors:
      ds_temperature_pretty:
        friendly_name: "Temperature"
        unit_of_measurement: 'Â°F'
        value_template: "{{ states('sensor.dark_sky_temperature')|round(0) }}"
  - platform: template
    sensors:
      ds_humidity_pretty:
        friendly_name: "Humidity"
        unit_of_measurement: '%'
        value_template: "{{ states('sensor.dark_sky_humidity')|round(0) }}"
  - platform: template
    sensors:
      ds_dew_point_pretty:
        friendly_name: "Dew point"
        unit_of_measurement: 'Â°F'
        value_template: "{{ states('sensor.dark_sky_dew_point')|round(0) }}"
  - platform: template
    sensors:
      ds_wind_speed_pretty:
        friendly_name: "Wind speed"
        unit_of_measurement: 'mph'
        value_template: "{{ states('sensor.dark_sky_wind_speed')|round(0) }}"
  - platform: template
    sensors:
      wind_dir:
        friendly_name: 'Wind Direction'
        value_template: >-
         {% set wind_dir = states.sensor.dark_sky_wind_bearing.state %}
         {% if wind_dir | float<=23 %}North
         {% elif wind_dir | float>338 %}North
         {% elif 23 < (wind_dir|float) <=68 %}NE
         {% elif 68 < (wind_dir|float) <=113 %}East
         {% elif 113 < (wind_dir|float) <=158 %}SE
         {% elif 158 < (wind_dir|float) <=203 %}South
         {% elif 203 < (wind_dir|float) <=248 %}SW
         {% elif 248 < (wind_dir|float) <=293 %}West
         {% elif 293 < (wind_dir|float) <=338 %}NW
         {%- endif %}